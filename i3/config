# Author: Clemens@Manert.de

# Modifier key: windows/super/Mod4
set $mod Mod4

# Colors
set $focused     #729fcf
set $normal      #434343
set $background  #555753
set $urgent      #ef2929
set $text        #d3d7cf

# Reload the configuration 
# Or restart i3
bindsym $mod+Shift+r mode "$reload_restart"
set $reload_restart Want it fresh? (l) reload config, (s) restart i3
mode "$reload_restart" {
    bindsym l reload; mode "default"
    bindsym s restart
    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Terminus 10

# Before i3 v4.8, we used to recommend this one as the default:
font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesnâ€™t scale on retina/hidpi displays.

# Borders
for_window [class="^.*"] border pixel 0

# Colors
#                       border   backgr       text         indicator
client.focused          $focused $focused     $text        $focused
client.focused_inactive $normal  $background  $text        $background
client.unfocused        $normal  $background  $text        $background
client.urgent           $urgent  $urgent      $background  $urgent
client.background       $normal  $background  $focused     $background

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    status_command /home/clemens/projekte/dotfiles/i3/i3pystatus.config
    position top
    colors {
        background  $background
        statusline  $text
        separator   $focused
        #                   border       backgr       text
        focused_workspace   $focused     $background  $focused 
        active_workspace    $focused     $background  $text 
        inactive_workspace  $background  $background  $text
        urgent_workspace    $focused     $urgent      $background
    }
}

# hide/show bar
bindsym $mod+Shift+b bar mode toggle

# toggle touchpad
bindsym XF86TouchpadToggle exec --no-startup-id "~/shellscripts/xinput-toggle-enabled.sh"

# focus when mouse moves
focus_follows_mouse no

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# lock/exit/suspend etc.
bindsym XF86PowerOff mode "$mode_system"
bindsym $mod+Escape mode "$mode_system"
set $mode_system Want to leave?  (e) logout, (l) lock, (s) suspend, (h) hibernate, (r) reboot, (p) poweroff
mode "$mode_system" {
    bindsym e exit
    bindsym l exec --no-startup-id "i3lock -t -i ~/.i3/wallpaper"; mode "default"
    bindsym s exec --no-startup-id "i3lock -t -i ~/.i3/wallpaper; sudo pm-suspend"; mode "default"
    bindsym h exec --no-startup-id "i3lock -t -i ~/.i3/wallpaper; sudo pm-hibernate"; mode "default"
    bindsym r exec --no-startup-id "reboot"
    bindsym p exec --no-startup-id "poweroff";       

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# take a screenshot
bindsym $mod+Print exec "gnome-screenshot"
bindsym      Print exec "gnome-screenshot"

# windows always floating/fullscreen
for_window [class="(?i)gcolor2"]        floating enable 
for_window [class="(?i)nemo"]           floating enable 
for_window [title="(?i)sxiv"]           fullscreen

# start a terminal
bindsym $mod+Shift+o      split horizontal; exec "tapetenwechsel terminal"
bindsym $mod+o            split vertical;   exec "tapetenwechsel terminal"
bindsym $mod+Shift+Return split horizontal; exec "tapetenwechsel terminal"
bindsym $mod+Return       split vertical;   exec "tapetenwechsel terminal"

# kill focused container
bindsym $mod+BackSpace kill
bindsym $mod+Shift+c kill
bindsym $mod+q kill

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused container
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# focus the parent/child container
bindsym $mod+u focus parent
bindsym $mod+Shift+u focus child

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+space layout toggle

# toggle tiling/floating
bindsym $mod+Shift+a floating toggle
# change focus between tiling/floating windows
bindsym $mod+a focus mode_toggle

# send container to background
bindsym $mod+Shift+z move scratchpad

# and show it again
bindsym $mod+z scratchpad show 

# resize container
bindsym $mod+r mode "resize"
mode "resize" {
    set $steps "3"
    set $steps2 "30"    
    bindsym h resize shrink width  $steps px or $steps ppt
    bindsym k resize grow   height $steps px or $steps ppt
    bindsym j resize shrink height $steps px or $steps ppt
    bindsym l resize grow   width  $steps px or $steps ppt

    bindsym Shift + h resize shrink width  $steps2 px or $steps ppt
    bindsym Shift + k resize grow   height $steps2 px or $steps ppt
    bindsym Shift + j resize shrink height $steps2 px or $steps ppt
    bindsym Shift + l resize grow   width  $steps2 px or $steps ppt

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# change border
bindsym $mod+b border toggle

# $mod+4 two times to get back to last recently used
workspace_auto_back_and_forth yes

# open new workspace
bindsym $mod+i exec "quickswitch -E"

# rename workspace
bindsym $mod+comma exec i3-input -F 'rename workspace to %s' -P 'rename workspace to: '

# switch to a specific window or workspace
bindsym $mod+t mode "goto"
mode "goto" {
   bindsym f [class="(?i)firefox"]  focus; mode "default"
   bindsym s [class="(?i)sublime"]  focus; mode "default"
   bindsym m workspace music; mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# switch to another workspace
bindsym $mod+g [urgent=latest] focus
bindsym $mod+minus workspace back_and_forth

bindsym $mod+w exec "quickswitch --workspaces"
bindsym $mod+n workspace next_on_output
bindsym $mod+p workspace prev_on_output
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move container to specific workspace
bindsym $mod+Shift+n move container to workspace next_on_output
bindsym $mod+Shift+p move container to workspace prev_on_output
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# move container to new workspace (tmux 'break')
bindsym $mod+Shift+i exec "quickswitch --journey -E"
# move container to specific workspace
bindsym $mod+Shift+w exec "quickswitch --journey"
bindsym $mod+Shift+numbersign move container to workspace back_and_forth
bindsym $mod+Shift+space move container to workspace back_and_forth

# move container/workspace to other output
bindsym $mod+y       move container to output right; workspace back_and_forth
bindsym $mod+Shift+y move workspace to output right
